apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.accounts.name }}
  namespace: {{ .Values.namespace }}
spec:
  ports:
  - port: 443
    targetPort: 443
    name: {{ .Values.accounts.name }}
    appProtocol: https
  selector:
    app: {{ .Values.accounts.name }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.accounts.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.accounts.name }}
      version: v1
  template:
    metadata:
      labels:
        app: {{ .Values.accounts.name }}
        version: v1
    spec:
      containers:
      - image: "{{ .Values.image.repository }}/{{ .Values.accounts.image }}:{{ .Values.accounts.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: {{ .Values.accounts.name }}
        # Setting the Keycloak admin credentials here is only needed if you don't want to use the bootstrap script to seed the initial Keycloak database. See a full explanation in the bootstrap.sh file.
        env:
        - name: KEYCLOAK_ADMIN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.accounts.secretName }}
              key: adminuser
        - name: KEYCLOAK_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.accounts.secretName }}
              key: adminpassword
        - name: KEYCLOAK_LOGLEVEL
          value: {{ .Values.accounts.logLevel }}
        - name: PROXY_ADDRESS_FORWARDING
          value: "true"
        - name: KC_DB_URL
          value: jdbc:postgresql://{{ .Values.database.address }}:{{ .Values.database.port }}/{{ .Values.database.database }}?currentSchema={{ .Values.database.schema }}
        - name: KC_DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database.secretName }}
              key: user
        - name: KC_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database.secretName }}
              key: password
        - name: KC_DB_SCHEMA
          value: {{ .Values.database.schema }}
        - name: KC_DB
          value: {{ .Values.database.vendor }}
        - name: KC_HOSTNAME
          value: {{ .Values.accounts.subdomain }}.{{ .Values.domain }}.{{ .Values.tld }}
        stdin: true
        tty: true
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: {{ .Values.accounts.name }}
spec:
  hosts:
  - {{ .Values.accounts.subdomain }}.{{ .Values.domain }}.{{ .Values.tld }}
  gateways:
  - {{ .Values.namespace }}-gateway
  tls:
  - match:
    - port: 443
      sniHosts:
      - {{ .Values.accounts.subdomain }}.{{ .Values.domain }}.{{ .Values.tld }}
    route:
    - destination:
        host: {{ .Values.accounts.name }}.{{ .Values.namespace }}.svc.cluster.local
        port:
          number: 443